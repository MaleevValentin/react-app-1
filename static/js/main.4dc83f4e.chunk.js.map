{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","sendMessage","newMessageBody","type","dialogsReducer","state","action","newMessage","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","getLogin","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Nav","className","s","nav","item","to","activeClassName","activeLink","Music","props","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","src","photos","small","userPhoto","alt","disabled","some","Users","u","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","Input","required","formControlSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","isError","formControl","Textarea","restProps","child","placeholder","component","validators","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPost","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.4dc83f4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__gCbrS\",\"item\":\"Navbar_item__2YbAA\",\"activeLink\":\"Navbar_activeLink__3q_4F\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Gigi'},\r\n        {id: 2, name: 'Alex'},\r\n        {id: 3, name: 'David'},\r\n        {id: 4, name: 'Mauro'},\r\n        {id: 5, name: 'Paulo'},\r\n        {id: 6, name: 'Juan'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Fine Alla FIne'},\r\n        {id: 2, message: 'Forza Juve'},\r\n        {id: 3, message: '!!!!!!!!!!'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo yo'},\r\n        {id: 6, message: 'Yo yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: 7,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__10ym9\",\"selectedPage\":\"users_selectedPage__3Nkok\"};","module.exports = __webpack_public_path__ + \"static/media/user.f07d66e0.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.84a3c9c3.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': \"bd604b2f-5255-4876-89ca-062363e98574\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolete method. Please, use profileAPI object\");\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getLogin() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.activeLink}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.activeLink}`}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>Music</div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>News</div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>Settings</div>\r\n    );\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((user) => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOOGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOOGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOOGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}><img\r\n                        src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                        className={styles.userPhoto} alt=''/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id);\r\n                                  }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id);\r\n                                  }}>\r\n                            Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'user.location.country'}</div>\r\n                    <div>{'user.location.city'}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}/>\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(user => true);\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {follow, requestUsers, setCurrentPage, unfollow} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n        this.props.setCurrentPage(pageNumber);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   users={this.props.users}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers: requestUsers}),\r\n)(UsersContainer);","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://dcassetcdn.com/design_img/1559024/551167/551167_7840631_1559024_911ff84c_image.png\"\r\n                 alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getLogin();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {CreateField(\"Email\", \"email\", Input, [required])}\r\n            {CreateField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n            {CreateField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"Remember me\")}\r\n\r\n            {error && <div className={styles.formControlSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    };\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Nav from \"./components/Navbar/Navbar\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Nav/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/music'\r\n                           render={() => <Music/>}/>\r\n                    <Route path='/news'\r\n                           render={() => <News/>}/>\r\n                    <Route path='/settings'\r\n                           render={() => <Settings/>}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    /*withRouter,*/\r\n    connect(mapStateToProps, {initializeApp})(App));\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n};\r\n\r\nexport default SamuraiJSApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const isError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (isError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {isError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, component, validators, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        />\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__FTAON\",\"error\":\"FormsControls_error__3f5Ww\",\"formControlSummaryError\":\"FormsControls_formControlSummaryError__2bRbZ\"};","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=''/>\r\n        </div>)\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2c16C\",\"pageNumber\":\"Paginator_pageNumber__tGvY3\",\"selectedPage\":\"Paginator_selectedPage__19fal\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__BWjPJ\",\"loginBlock\":\"Header_loginBlock__M7Vm8\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Fino Alla Fine', likesCount: 6},\r\n        {id: 2, message: 'Forza Juve!!!!', likesCount: 5},\r\n        {id: 3, message: 'Forza Juve!!!!', likesCount: 5},\r\n        {id: 4, message: 'Forza Juve!!!!', likesCount: 7}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)};\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}
{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","event","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","alt","fullName","aboutMe","lookingForAJob","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElements","posts","reverse","map","post","key","id","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","compose","connect","state","profilePage","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f9fccc29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__mjTCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3npxI\",\"posts\":\"MyPosts_posts__2CamE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1blxl\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div>\r\n                    {profile.fullName}\r\n                </div>\r\n                <div>\r\n                    {profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    {profile.lookingForAJob ? 'Looking for a job' : 'Working'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://www.nj.com/resizer/h8MrN0-Nw5dB5FOmMVGMmfVKFJo=/450x0/smart/cloudfront-us-east-1.images.arcpublishing.com/advancelocal/SJGKVE5UNVESVCW7BBOHKQCZVE.jpg\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(post => (\r\n            <Post message={post.message} key={post.id} likesCount={post.likesCount}/>));\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newPostText\"} component={Textarea} placeholder={\"Add post\"}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddPostForm);\r\n\r\nexport default MyPosts;","//import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost}))\r\n    (MyPosts);","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n/*import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";*/\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    /*withAuthRedirect*/)(ProfileContainer);"],"sourceRoot":""}
{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCanKC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCAvBC,EANC,SAACT,GACb,OACI,yBAAKG,UAAWC,IAAEM,SAAUV,EAAMU,U,iCC6BpCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACd,GACpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOV,KAAM,iBAAkBW,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAClEY,YAAa,wBAExB,6BACI,6CAQDC,EA5CC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAxB,GAAM,OAC1C,kBAAC,EAAD,CAAYG,KAAMH,EAAOG,KAAMsB,IAAKzB,EAAOH,GAAIA,GAAIG,EAAOH,QAC1D6B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAK,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE/B,QAMpF,OACI,yBAAKC,UAAWC,IAAEwB,SACd,yBAAKzB,UAAWC,IAAE8B,cACbP,GAEL,yBAAKxB,UAAWC,IAAE4B,UACd,6BAAMD,GACN,kBAAClB,EAAD,CAAqBG,SAXb,SAACmB,GACjBnC,EAAMoC,YAAYD,EAAOE,sB,gDCb7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCQRE,sBACXC,aAPoB,SAACjB,GACrB,MAAO,CACHC,YAAaD,EAAMC,eAKE,CAACU,mBDNE,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK7C,MAAMuC,OACT,kBAACI,EAAcE,KAAK7C,OADI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACXuC,IAAMH,WAMtC,OAAOD,YAAQJ,EAARI,CAAoCE,KCFhCH,CAEOjB","file":"static/js/4.c39e82b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__nybqU\",\"dialogsItems\":\"Dialogs_dialogsItems__2h6i9\",\"active\":\"Dialogs_active__3BPAw\",\"messages\":\"Dialogs_messages__3dUQQ\",\"message\":\"Dialogs_message__3YSD9\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./Dialog/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => (\r\n        <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>));\r\n    let messagesElements = state.messages.map(m => (<Message message={m.message} key={m.id}/>));\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newMessageBody\"} component={Textarea} validate={[required, maxLength50]}\r\n                       placeholder={\"Enter your message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMassageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}